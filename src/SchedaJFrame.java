
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JTextArea;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author donato
 */
public class SchedaJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SchedaJFrame
     */
    //public static JTextArea textlog;
    public SchedaJFrame() {
        initComponents();

        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {

                if (t1 == null || (!t1.isAlive())) {
                    jButtonScheda.setEnabled(true);
                    jButtonCancel.setEnabled(false);
                } else {
                    jButtonScheda.setEnabled(false);
                    jButtonCancel.setEnabled(true);
                }

            }
        });
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextLog = new javax.swing.JTextArea();
        jDirSource = new javax.swing.JFileChooser();
        jDirDestination = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonScheda = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scheda file");

        jTextLog.setEditable(false);
        jTextLog.setColumns(20);
        jTextLog.setRows(5);
        jScrollPane1.setViewportView(jTextLog);

        jDirSource.setAcceptAllFileFilterUsed(false);
        jDirSource.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        jDirSource.setApproveButtonText("scheda");
        jDirSource.setControlButtonsAreShown(false);
        jDirSource.setCurrentDirectory(new java.io.File("/home/donato"));
        jDirSource.setDialogTitle("Source Dir");
        jDirSource.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        jDirDestination.setAcceptAllFileFilterUsed(false);
        jDirDestination.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        jDirDestination.setApproveButtonText("scheda");
        jDirDestination.setApproveButtonToolTipText("");
        jDirDestination.setControlButtonsAreShown(false);
        jDirDestination.setCurrentDirectory(new java.io.File("/home/donato"));
        jDirDestination.setDialogTitle("Destination Dir");
        jDirDestination.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        jDirDestination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDirDestinationActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Source Dir");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("Move files in subfolders divided by year, month and extension");

        jButtonScheda.setText("Move");
        jButtonScheda.setToolTipText("");
        jButtonScheda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSchedaActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel3.setText("Destination Dir");

        jButtonCancel.setText("Cancel");
        jButtonCancel.setToolTipText("");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonScheda, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jDirSource, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDirDestination, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDirSource, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDirDestination, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonScheda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private MoveClass t1;


    private void jButtonSchedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSchedaActionPerformed

        System.out.println("Source Dir: " + jDirSource.getCurrentDirectory());

        if (jDirSource.getCurrentDirectory() == null) {
            System.out.println("Error <source directory>");
            jTextLog.setText("Error <starting directory>");
            //System.exit(-1);
        } else {
            System.out.println("Destination Dir: " + jDirDestination.getCurrentDirectory());
            if (jDirDestination.getCurrentDirectory() == null) {
                System.out.println("Error <destination directory>");
                jTextLog.setText("Error <destination directory>");
                //System.exit(-1);

            } else {
                Path source = Paths.get(jDirSource.getCurrentDirectory().getAbsolutePath());
                if (!Files.isDirectory(source)) {
                    System.out.println(source.toString() + " must be a directory!");
                    //System.exit(-1);
                    jTextLog.setText(source.toString() + " must be a directory!");
                } else {
                    Path destination = Paths.get(jDirDestination.getCurrentDirectory().getAbsolutePath());
                    if (!Files.isDirectory(destination)) {
                        System.out.println(destination.toString() + " must be a directory!");
                        //System.exit(-1);
                        jTextLog.setText(destination.toString() + " must be a directory!");

                    } else {
                        if (destination.toString().equals(source.toString())) {
                            System.out.println(destination.toString() + " must be different directory!");
                            //System.exit(-1);
                            jTextLog.setText(destination.toString() + " must be different directory!");

                        } else {
                            if (t1 == null || (!t1.isAlive())) {
                                t1 = new MoveClass(source, destination, jTextLog);
                                t1.start();
                                jButtonScheda.setEnabled(false);
                                jButtonCancel.setEnabled(true);
                            } else {
                                System.out.println("Wait, please ");
                                jTextLog.setText("Wait, please ");
                            }

                        }
                    }
                }
            }
        }

    }//GEN-LAST:event_jButtonSchedaActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        if (t1 == null || (!t1.isAlive())) {
            System.out.println("No threads to stop ");
            jTextLog.setText("No threads to stop");
        } else {
            System.out.println("Stop thread");
            jTextLog.setText("Stop thread");
            t1.interrupt();
        }
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jDirDestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDirDestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDirDestinationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchedaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchedaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchedaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchedaJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SchedaJFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonScheda;
    private javax.swing.JFileChooser jDirDestination;
    private javax.swing.JFileChooser jDirSource;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextLog;
    // End of variables declaration//GEN-END:variables
}
